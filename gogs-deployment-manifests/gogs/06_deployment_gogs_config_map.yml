---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: workshop-gogs
    env: workshop
  name: deployment-name-gogs
spec:
  replicas: 1
  selector:
    matchLabels:
      app: workshop-gogs
      deployment: workshop-gogs
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: workshop-gogs
        env: workshop
        deployment: workshop-gogs
    spec:
      serviceAccountName: sa-gogs
      containers:
      - image: ${EXTERNAL_REGISTRY}/${GOGS_IMAGE}
        imagePullPolicy: IfNotPresent
        name: gogs
        ports:
        - containerPort: 3000
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /data
          name: gogs-volume-1
        - mountPath: /opt/gogs/custom/conf
          name: config-volume
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
#      volumes:
#      - emptyDir: {}
#        name: gogs-volume-1
      volumes:
      - name: gogs-volume-1
        persistentVolumeClaim:
          claimName: pvc-gogs
      - configMap:
          defaultMode: 420
          name: gogs
        name: config-volume    
...